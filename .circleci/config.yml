version: 2.1
jobs:
  sunbird-lern-dp-build:
    machine:
      image: ubuntu-2004:202008-01
    steps:
      - checkout
      - run:
          name: clone analytics core
          command: |
            if [ -z $CIRCLE_PR_NUMBER ]; then
              target_branch=$CIRCLE_BRANCH
            else
              prdata=$(curl -X GET -u $GITHUB_USER_TOKEN:x-oauth-basic https://api.github.com/repos/Sunbird-Lern/data-products/pulls/$CIRCLE_PR_NUMBER)
              target_branch=$(echo "${prdata}" | jq -r '.base.ref')
            fi
            echo $target_branch
            git clone https://github.com/Sunbird-Obsrv/sunbird-analytics-core.git
            branchExists=$(cd sunbird-analytics-core && git ls-remote --heads origin $target_branch)
            echo $branchExists
            if [ -z ${branchExists} ]; then
                latest_branch=$(cd sunbird-analytics-core && git for-each-ref --count=1 --sort=-committerdate 'refs/remotes/**/release*' --format='%(refname:short)' | head -1)
                echo $latest_branch
                cd sunbird-analytics-core && git checkout $latest_branch
            else
                cd sunbird-analytics-core && git checkout $target_branch
            fi
            cd ../ && git clone https://github.com/Sunbird-Obsrv/sunbird-core-dataproducts.git
            branchExists=$(cd sunbird-core-dataproducts && git ls-remote --heads origin $target_branch)
            echo $branchExists
            if [ -z ${branchExists} ]; then
               latest_branch=$(cd sunbird-core-dataproducts && git for-each-ref --count=1 --sort=-committerdate 'refs/remotes/**/release*' --format='%(refname:short)' | head -1)
               echo $latest_branch
               cd sunbird-core-dataproducts && git checkout $latest_branch
            else
               cd sunbird-core-dataproducts && git checkout $target_branch
            fi
      - restore_cache:
          keys:
            - dp-dependency-cache-{{ checksum "lern-data-products/pom.xml" }}
      - run:
          name: Build analytics-core dependency jar
          command: |
            echo $(java -version)
            cd sunbird-analytics-core && mvn install -DskipTests -DCLOUD_STORE_GROUP_ID=$CLOUD_STORE_GROUP_ID -DCLOUD_STORE_ARTIFACT_ID=$CLOUD_STORE_ARTIFACT_ID -DCLOUD_STORE_VERSION=$CLOUD_STORE_VERSION
      - run:
          name: Build core-data-products dependency jar
          command:   |
            echo $(java -version)
            cd sunbird-core-dataproducts && mvn install -DskipTests
      - run:
          name: Lern-data-products-build
          no_output_timeout: 20m
          command: |
            echo $(java -version)
            cd lern-data-products && mvn scoverage:report -DCLOUD_STORE_GROUP_ID=$CLOUD_STORE_GROUP_ID -DCLOUD_STORE_ARTIFACT_ID=$CLOUD_STORE_ARTIFACT_ID -DCLOUD_STORE_VERSION=$CLOUD_STORE_VERSION
      - save_cache:
          key: dp-dependency-cache-{{ checksum "lern-data-products/pom.xml" }}
          paths: ~/.m2
      - run:
          name: sonar
          command: |
            export JAVA_HOME=/usr/lib/jvm/java-1.11.0-openjdk-amd64
            echo $(java -version)
            cd lern-data-products && mvn -X sonar:sonar -Dsonar.projectKey=Sunbird-Lern_data-products -Dsonar.organization=sunbird-lern -Dsonar.host.url=https://sonarcloud.io -Dsonar.exclusions=/home/circleci/project/adhoc-scripts/** -Dsonar.scala.coverage.reportPaths=/home/circleci/project/lern-data-products/target/scoverage.xml

workflows:
  version: 2.1
  workflow:
    jobs:
      - sunbird-lern-dp-build
