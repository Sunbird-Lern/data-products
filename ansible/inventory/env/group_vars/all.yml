# Not used
metrics_search_params_bucket: "dev-data-store"
log4j_appender_kafka_topic: "{{env}}.telemetry.backend"

# Every where the value is telemetry-data-store
# Shall we change the value to telemetry-data-store in dev also?
# What's the implication
# Is it azure blob or s3 bucket??
channel_data_exhaust_bucket: dev-data-store
secrets_path: '{{inventory_dir}}/secrets.yml'
artifacts_container: "{{dp_vault_artifacts_container}}"

report_azure_account_name: "{{cloud_private_storage_accountname}}"
report_azure_storage_secret: "{{cloud_private_storage_secret}}"

sunbird_api_auth_token: "{{ core_vault_sunbird_api_auth_token }}"
metadata2_redis_host: "{{ groups['redis'][0] }}"
searchServiceAuthorizationToken: "{{ sunbird_api_auth_token }}"

# Learning Service organization and location search endpoints
channelSearchServiceEndpoint: "{{ proto}}://{{domain_name}}/api/org/v1/search"
locationSearchServiceEndpoint: "{{ proto}}://{{domain_name}}/api/data/v1/location/search"

env_name: "{{env}}"
# Ingestion cluster
ingestion_kafka_brokers: "{{groups['processing-cluster-kafka']|join(':9092,')}}:9092"

# Create learningall group with LP ips
cassandra_host:  "{{ groups['cassandra'][0] }}"
core_cassandra_host: "{{ groups['core-cassandra'][0] }}"
lp_cassandra_host: "{{ groups['lp-cassandra'][0] }}"
report_cassandra_host: "{{ groups['report-cassandra'][0] }}"

analytics_user: analytics
analytics_group: analytics
analytics_user_home: /home/{{ analytics_user }}
sbin_path: "{{ analytics_user_home }}/sbin"

# postgres
# list of databases to be created
# Can move this dictionary to postgres role; but incase we want to generalize roles!!
postgresql_databases:
  - name: analytics
    owner: analytics

postgresql_users:
  - name: analytics
    password: "{{dp_vault_pgdb_password}}"

postgres:
  db_url: "{{ groups['postgres'][0] }}"
  db_username: analytics
  db_name: analytics
  db_password: "{{dp_vault_pgdb_password}}"
  db_table_name: "{{env}}_consumer_channel_mapping"
  db_port: 5432
  db_admin_user: analytics
  db_admin_password: "{{dp_vault_pgdb_admin_password}}"

postgres_address_space: 0.0.0.0/0 # Postgres trust address space

lp_composite_search: "http://{{ groups['composite-search-cluster'][0] }}:9200" # Composite Cluster ip of LP
lp_composite_search_host: "{{ groups['composite-search-cluster'][0] }}"
lp_search: "http://{{private_ingressgateway_ip}}/search"
lp_url: http://{{ groups['learning'][0] }}:8080/learning-service
service:
  search:
    url: http://{{private_ingressgateway_ip}}/search
    path: /v3/search

cassandra_hierarchy_store_prefix: "{{env}}_"
data_exhaust_token: "{{dp_vault_data_exhaust_token}}"
default_channel: "{{default_org_hash_id}}"

# sunbird learner service
sunbird_es_host: "{{groups['core-es']| join(',')}}"
single_node_es_host: "{{ groups['core-es'][0] }}"

#Druid Proxy APi service
sunbird_druid_broker_host: "http://{{ groups['raw-broker'][0] }}"
sunbird_learner_service_url: "http://{{private_ingressgateway_ip}}/learner"

location_search_url: "{{ domain_name }}/api/data/"
location_search_token: "Bearer {{ sunbird_api_auth_token }}"

druid_report_url_endpoint : "{{ proto}}://{{domain_name}}/api/data/v1/report/jobs"
druid_report_url : "{{ proto}}://{{domain_name}}/api/data/v1/"
druid_report_token : "Bearer {{ sunbird_api_auth_token }}"

#redis multiprocess config
user_port: 6381

exhaust_job_assessment_primary_category: "Practice Question Set"
etb_dialcode_list_druid_length: 70
# s3 storage config
s3_storage_key: "{{ sunbird_private_s3_storage_key }}"
s3_storage_secret: "{{ sunbird_private_s3_storage_secret }}"
s3_storage_endpoint: ""
s3_request_signature_version: AWS4-HMAC-SHA256
s3_path_style_access: false
s3_https_only: false
s3_default_bucket_location: ""
s3_storage_container: ""

org_search_service_private_endpoint: "{{sunbird_learner_service_url}}/private/v2/org/search"
tenant_preferance_read_private_service_endpoint: "{{sunbird_learner_service_url}}/private/v2/org/preferences/read"

cloud_storage_report_verfication_bucketname: "report-verification"
dp_storage_endpoint_config: "{{s3_storage_endpoint}}"

core_cassandra_read_consistency: "{{lp_cassandra_read_consistency | default('LOCAL_QUORUM')}}"
core_cassandra_write_consistency: "{{lp_cassandra_write_consistency | default('LOCAL_QUORUM')}}"
