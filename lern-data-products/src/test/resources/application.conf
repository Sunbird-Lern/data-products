application.env="local"
telemetry.version="2.1"
default.parallelization=10
spark_output_temp_dir="/tmp/"

#App ID & Channel ID
default.consumption.app.id="genie"
default.channel.id="in.sunbird"
default.creation.app.id="portal"

# Test Configurations
cassandra.service.embedded.enable=true
cassandra.cql_path="src/main/resources/data.cql"
cassandra.service.embedded.connection.port=9142
cassandra.keyspace_prefix="local_"

spark.cassandra.connection.host=127.0.0.1

# Slack Configurations
monitor.notification.channel = "testing"
monitor.notification.name = "dp-monitor"
monitor.notification.slack = false

# DataExhaust configuration
data_exhaust {
	save_config {
		save_type="local"
		bucket="ekstep-dev-data-store"
		prefix="/tmp/data-exhaust/"
		public_s3_url="s3://"
		local_path="/tmp/data-exhaust-package/"
	}
	delete_source: "false"
	package.enable: "false"
}

cloud_storage_type="local"

service.search.url="http://localhost:9080/api/content"
service.search.path="/v1/search"

## Reports - Global config
cloud.container.reports="reports"

# course metrics container in azure
es.host="http://localhost"
es.composite.host="localhost"
es.port="9200"
course.metrics.cassandra.sunbirdKeyspace="sunbird"
course.metrics.cassandra.sunbirdCoursesKeyspace="sunbird_courses"
admin.reports.cloud.container="reports"
# Folder names within container
course.metrics.cloud.objectKey="src/test/resources/reports/"
admin.metrics.cloud.objectKey="src/test/resources/admin-user-reports/"

# End of report folder names
course.metrics.cassandra.input.consistency="QUORUM"
assessment.metrics.cassandra.input.consistency="QUORUM"
assessment.metrics.bestscore.report=true // BestScore or Latst Updated Score
assessment.metrics.supported.contenttype="SelfAssess"
assessment.metrics.supported.primaryCategories="Practice Question Set"
spark.sql.caseSensitive=true

reports_storage_key="test"
reports_storage_secret="test"
# for only testing uploads to blob store
azure_storage_key=""
azure_storage_secret=""

spark.memory_fraction=0.3
spark.storage_fraction=0.5
spark.driver_memory=1g

// Metric event config
metric.producer.id="pipeline.monitoring"
metric.producer.pid="dataproduct.metrics"
push.metrics.kafka=false
metric.kafka.broker="localhost:9092"
metric.kafka.topic="metric"

//Postgres Config
postgres.db="postgres"
postgres.url="jdbc:postgresql://localhost:65124/"
postgres.user="postgres"
postgres.pass="postgres"

sunbird_encryption_key="SunBird"
sunbird_encryption="ON"

//redis connection
redis.connection.max=2
redis.connection.idle.max=2
redis.connection.idle.min=1
redis.connection.minEvictableIdleTimeSeconds=120
redis.connection.timeBetweenEvictionRunsSeconds=300
redis.user.index=12
collection.exhaust.store.prefix="src/test/resources/exhaust-reports"

## Collection Exhaust Jobs Configuration - Start ##

sunbird.user.keyspace="sunbird"
sunbird.courses.keyspace="sunbird_courses"
sunbird.user.keyspace="sunbird"
sunbird.content.hierarchy.keyspace="dev_hierarchy_store"
sunbird.program.report.keyspace="sunbird_programs"
sunbird.user.cluster.host=127.0.0.1
sunbird.courses.cluster.host=127.0.0.1
sunbird.content.cluster.host=127.0.0.1
sunbird.report.cluster.host=127.0.0.1
sunbird.program.report.host=127.0.0.1
sunbird.user.report.keyspace="sunbird_courses"
collection.exhaust.store.prefix="reports"
ml.exhaust.store.prefix="ml_reports"
postgres.table.job_request="job_request"

exhaust.batches.limit.per.channel=3
// file size in bytes
exhaust.file.size.limit=100

exhaust.parallel.batch.load.limit = 10
exhaust.user.parallelism=200
exhaust.file.size.limit.per.channel=100
data_exhaust.batch.limit.per.request=4

sunbird.course.optionalnodes="optionalnodes"
sunbird.course.redis.host="localhost"
sunbird.course.redis.port=6341
sunbird.course.redis.relationCache.id=5

org.search.private.api.url="https://dev.lern.sunbird.org/private/v2/org/search"
tenant.pref.read.private.api.url="http://localhost:9090/private/v2/org/preferences/read"

framework_read_api = "/api/framework/v1/read/"
taxonomy.basePath = "http://localhost:9100"
redis.user.database.index=0
sunbird_instance_name="Sunbird"

content.search.url="http://localhost:9100/search"
content.search.path="/v3/search"
course.batch.search.url="http://localhost:9100/lms/v1/course/batch"
batch.search.path="/search"
